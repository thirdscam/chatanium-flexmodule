syntax = "proto3";
package discord_v1;
option go_package = "github.com/thirdscam/chatanium-flexmodule/proto/discord-v1";

import "common.proto";
import "discord-v1/discordgo.proto";

service Helper {
    // Message operations
    rpc ChannelMessageSend(ChannelMessageSendRequest) returns (ChannelMessageSendResponse);
    rpc ChannelMessageSendComplex(ChannelMessageSendComplexRequest) returns (ChannelMessageSendComplexResponse);
    rpc ChannelMessageSendEmbed(ChannelMessageSendEmbedRequest) returns (ChannelMessageSendEmbedResponse);
    rpc ChannelMessageSendEmbeds(ChannelMessageSendEmbedsRequest) returns (ChannelMessageSendEmbedsResponse);
    rpc ChannelMessageEdit(ChannelMessageEditRequest) returns (ChannelMessageEditResponse);
    rpc ChannelMessageEditComplex(ChannelMessageEditComplexRequest) returns (ChannelMessageEditComplexResponse);
    rpc ChannelMessageDelete(ChannelMessageDeleteRequest) returns (common.Empty);
    rpc ChannelMessages(ChannelMessagesRequest) returns (ChannelMessagesResponse);
    rpc ChannelMessage(ChannelMessageRequest) returns (ChannelMessageResponse);
    
    // Channel operations
    rpc Channel(ChannelRequest) returns (ChannelResponse);
    rpc ChannelEdit(ChannelEditRequest) returns (ChannelEditResponse);
    rpc ChannelDelete(ChannelDeleteRequest) returns (ChannelDeleteResponse);
    rpc ChannelTyping(ChannelTypingRequest) returns (common.Empty);
}

// Message operation messages

message ChannelMessageSendRequest {
    string channel_id = 1;
    string content = 2;
}

message ChannelMessageSendResponse {
    Message message = 1;
}

message ChannelMessageSendComplexRequest {
    string channel_id = 1;
    MessageSend data = 2;
}

message ChannelMessageSendComplexResponse {
    Message message = 1;
}

message ChannelMessageSendEmbedRequest {
    string channel_id = 1;
    MessageEmbed embed = 2;
}

message ChannelMessageSendEmbedResponse {
    Message message = 1;
}

message ChannelMessageSendEmbedsRequest {
    string channel_id = 1;
    repeated MessageEmbed embeds = 2;
}

message ChannelMessageSendEmbedsResponse {
    Message message = 1;
}

message ChannelMessageEditRequest {
    string channel_id = 1;
    string message_id = 2;
    string content = 3;
}

message ChannelMessageEditResponse {
    Message message = 1;
}

message ChannelMessageEditComplexRequest {
    MessageEdit message_edit = 1;
}

message ChannelMessageEditComplexResponse {
    Message message = 1;
}

message ChannelMessageDeleteRequest {
    string channel_id = 1;
    string message_id = 2;
}

message ChannelMessagesRequest {
    string channel_id = 1;
    int32 limit = 2;
    string before_id = 3;
    string after_id = 4;
    string around_id = 5;
}

message ChannelMessagesResponse {
    repeated Message messages = 1;
}

message ChannelMessageRequest {
    string channel_id = 1;
    string message_id = 2;
}

message ChannelMessageResponse {
    Message message = 1;
}

// Channel operation messages

message ChannelRequest {
    string channel_id = 1;
}

message ChannelResponse {
    Channel channel = 1;
}

message ChannelEditRequest {
    string channel_id = 1;
    ChannelEdit data = 2;
}

message ChannelEditResponse {
    Channel channel = 1;
}

message ChannelDeleteRequest {
    string channel_id = 1;
}

message ChannelDeleteResponse {
    Channel channel = 1;
}

message ChannelTypingRequest {
    string channel_id = 1;
}