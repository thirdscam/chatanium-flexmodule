// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: discord-v1/helper.proto

package discord_v1

import (
	proto "github.com/thirdscam/chatanium-flexmodule/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelMessageSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendRequest) Reset() {
	*x = ChannelMessageSendRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendRequest) ProtoMessage() {}

func (x *ChannelMessageSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelMessageSendRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageSendRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChannelMessageSendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendResponse) Reset() {
	*x = ChannelMessageSendResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendResponse) ProtoMessage() {}

func (x *ChannelMessageSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelMessageSendResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageSendComplexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Data          *MessageSend           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendComplexRequest) Reset() {
	*x = ChannelMessageSendComplexRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendComplexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendComplexRequest) ProtoMessage() {}

func (x *ChannelMessageSendComplexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendComplexRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendComplexRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelMessageSendComplexRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageSendComplexRequest) GetData() *MessageSend {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelMessageSendComplexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendComplexResponse) Reset() {
	*x = ChannelMessageSendComplexResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendComplexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendComplexResponse) ProtoMessage() {}

func (x *ChannelMessageSendComplexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendComplexResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendComplexResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelMessageSendComplexResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageSendEmbedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Embed         *MessageEmbed          `protobuf:"bytes,2,opt,name=embed,proto3" json:"embed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendEmbedRequest) Reset() {
	*x = ChannelMessageSendEmbedRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendEmbedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedRequest) ProtoMessage() {}

func (x *ChannelMessageSendEmbedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelMessageSendEmbedRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageSendEmbedRequest) GetEmbed() *MessageEmbed {
	if x != nil {
		return x.Embed
	}
	return nil
}

type ChannelMessageSendEmbedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendEmbedResponse) Reset() {
	*x = ChannelMessageSendEmbedResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendEmbedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedResponse) ProtoMessage() {}

func (x *ChannelMessageSendEmbedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelMessageSendEmbedResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageSendEmbedsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Embeds        []*MessageEmbed        `protobuf:"bytes,2,rep,name=embeds,proto3" json:"embeds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendEmbedsRequest) Reset() {
	*x = ChannelMessageSendEmbedsRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendEmbedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsRequest) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelMessageSendEmbedsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageSendEmbedsRequest) GetEmbeds() []*MessageEmbed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

type ChannelMessageSendEmbedsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageSendEmbedsResponse) Reset() {
	*x = ChannelMessageSendEmbedsResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageSendEmbedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageSendEmbedsResponse) ProtoMessage() {}

func (x *ChannelMessageSendEmbedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageSendEmbedsResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageSendEmbedsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{7}
}

func (x *ChannelMessageSendEmbedsResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageEditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageEditRequest) Reset() {
	*x = ChannelMessageEditRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditRequest) ProtoMessage() {}

func (x *ChannelMessageEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{8}
}

func (x *ChannelMessageEditRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageEditRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChannelMessageEditRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChannelMessageEditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageEditResponse) Reset() {
	*x = ChannelMessageEditResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditResponse) ProtoMessage() {}

func (x *ChannelMessageEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{9}
}

func (x *ChannelMessageEditResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageEditComplexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageEdit   *MessageEdit           `protobuf:"bytes,1,opt,name=message_edit,json=messageEdit,proto3" json:"message_edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageEditComplexRequest) Reset() {
	*x = ChannelMessageEditComplexRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageEditComplexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditComplexRequest) ProtoMessage() {}

func (x *ChannelMessageEditComplexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditComplexRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditComplexRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{10}
}

func (x *ChannelMessageEditComplexRequest) GetMessageEdit() *MessageEdit {
	if x != nil {
		return x.MessageEdit
	}
	return nil
}

type ChannelMessageEditComplexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageEditComplexResponse) Reset() {
	*x = ChannelMessageEditComplexResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageEditComplexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageEditComplexResponse) ProtoMessage() {}

func (x *ChannelMessageEditComplexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageEditComplexResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageEditComplexResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{11}
}

func (x *ChannelMessageEditComplexResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelMessageDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageDeleteRequest) Reset() {
	*x = ChannelMessageDeleteRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageDeleteRequest) ProtoMessage() {}

func (x *ChannelMessageDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageDeleteRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageDeleteRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{12}
}

func (x *ChannelMessageDeleteRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageDeleteRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ChannelMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeId      string                 `protobuf:"bytes,3,opt,name=before_id,json=beforeId,proto3" json:"before_id,omitempty"`
	AfterId       string                 `protobuf:"bytes,4,opt,name=after_id,json=afterId,proto3" json:"after_id,omitempty"`
	AroundId      string                 `protobuf:"bytes,5,opt,name=around_id,json=aroundId,proto3" json:"around_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessagesRequest) Reset() {
	*x = ChannelMessagesRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesRequest) ProtoMessage() {}

func (x *ChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{13}
}

func (x *ChannelMessagesRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ChannelMessagesRequest) GetBeforeId() string {
	if x != nil {
		return x.BeforeId
	}
	return ""
}

func (x *ChannelMessagesRequest) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *ChannelMessagesRequest) GetAroundId() string {
	if x != nil {
		return x.AroundId
	}
	return ""
}

type ChannelMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessagesResponse) Reset() {
	*x = ChannelMessagesResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessagesResponse) ProtoMessage() {}

func (x *ChannelMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessagesResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessagesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{14}
}

func (x *ChannelMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ChannelMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageRequest) Reset() {
	*x = ChannelMessageRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageRequest) ProtoMessage() {}

func (x *ChannelMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageRequest.ProtoReflect.Descriptor instead.
func (*ChannelMessageRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{15}
}

func (x *ChannelMessageRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ChannelMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelMessageResponse) Reset() {
	*x = ChannelMessageResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessageResponse) ProtoMessage() {}

func (x *ChannelMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessageResponse.ProtoReflect.Descriptor instead.
func (*ChannelMessageResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{16}
}

func (x *ChannelMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelRequest) Reset() {
	*x = ChannelRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelRequest) ProtoMessage() {}

func (x *ChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelRequest.ProtoReflect.Descriptor instead.
func (*ChannelRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{17}
}

func (x *ChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChannelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelResponse) Reset() {
	*x = ChannelResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelResponse) ProtoMessage() {}

func (x *ChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelResponse.ProtoReflect.Descriptor instead.
func (*ChannelResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{18}
}

func (x *ChannelResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

// ChannelEdit message for channel editing operations
type ChannelEdit struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	Name                          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Topic                         *string                `protobuf:"bytes,2,opt,name=topic,proto3,oneof" json:"topic,omitempty"`
	Nsfw                          *bool                  `protobuf:"varint,3,opt,name=nsfw,proto3,oneof" json:"nsfw,omitempty"`
	Position                      *int32                 `protobuf:"varint,4,opt,name=position,proto3,oneof" json:"position,omitempty"`
	Bitrate                       *int32                 `protobuf:"varint,5,opt,name=bitrate,proto3,oneof" json:"bitrate,omitempty"`
	UserLimit                     *int32                 `protobuf:"varint,6,opt,name=user_limit,json=userLimit,proto3,oneof" json:"user_limit,omitempty"`
	PermissionOverwrites          []*PermissionOverwrite `protobuf:"bytes,7,rep,name=permission_overwrites,json=permissionOverwrites,proto3" json:"permission_overwrites,omitempty"`
	ParentId                      *string                `protobuf:"bytes,8,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	RateLimitPerUser              *int32                 `protobuf:"varint,9,opt,name=rate_limit_per_user,json=rateLimitPerUser,proto3,oneof" json:"rate_limit_per_user,omitempty"`
	Flags                         *int32                 `protobuf:"varint,10,opt,name=flags,proto3,oneof" json:"flags,omitempty"`
	DefaultThreadRateLimitPerUser *int32                 `protobuf:"varint,11,opt,name=default_thread_rate_limit_per_user,json=defaultThreadRateLimitPerUser,proto3,oneof" json:"default_thread_rate_limit_per_user,omitempty"`
	Archived                      *bool                  `protobuf:"varint,12,opt,name=archived,proto3,oneof" json:"archived,omitempty"`
	AutoArchiveDuration           *int32                 `protobuf:"varint,13,opt,name=auto_archive_duration,json=autoArchiveDuration,proto3,oneof" json:"auto_archive_duration,omitempty"`
	Locked                        *bool                  `protobuf:"varint,14,opt,name=locked,proto3,oneof" json:"locked,omitempty"`
	Invitable                     *bool                  `protobuf:"varint,15,opt,name=invitable,proto3,oneof" json:"invitable,omitempty"`
	AppliedTags                   []string               `protobuf:"bytes,16,rep,name=applied_tags,json=appliedTags,proto3" json:"applied_tags,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ChannelEdit) Reset() {
	*x = ChannelEdit{}
	mi := &file_discord_v1_helper_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEdit) ProtoMessage() {}

func (x *ChannelEdit) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEdit.ProtoReflect.Descriptor instead.
func (*ChannelEdit) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{19}
}

func (x *ChannelEdit) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChannelEdit) GetTopic() string {
	if x != nil && x.Topic != nil {
		return *x.Topic
	}
	return ""
}

func (x *ChannelEdit) GetNsfw() bool {
	if x != nil && x.Nsfw != nil {
		return *x.Nsfw
	}
	return false
}

func (x *ChannelEdit) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *ChannelEdit) GetBitrate() int32 {
	if x != nil && x.Bitrate != nil {
		return *x.Bitrate
	}
	return 0
}

func (x *ChannelEdit) GetUserLimit() int32 {
	if x != nil && x.UserLimit != nil {
		return *x.UserLimit
	}
	return 0
}

func (x *ChannelEdit) GetPermissionOverwrites() []*PermissionOverwrite {
	if x != nil {
		return x.PermissionOverwrites
	}
	return nil
}

func (x *ChannelEdit) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *ChannelEdit) GetRateLimitPerUser() int32 {
	if x != nil && x.RateLimitPerUser != nil {
		return *x.RateLimitPerUser
	}
	return 0
}

func (x *ChannelEdit) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *ChannelEdit) GetDefaultThreadRateLimitPerUser() int32 {
	if x != nil && x.DefaultThreadRateLimitPerUser != nil {
		return *x.DefaultThreadRateLimitPerUser
	}
	return 0
}

func (x *ChannelEdit) GetArchived() bool {
	if x != nil && x.Archived != nil {
		return *x.Archived
	}
	return false
}

func (x *ChannelEdit) GetAutoArchiveDuration() int32 {
	if x != nil && x.AutoArchiveDuration != nil {
		return *x.AutoArchiveDuration
	}
	return 0
}

func (x *ChannelEdit) GetLocked() bool {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return false
}

func (x *ChannelEdit) GetInvitable() bool {
	if x != nil && x.Invitable != nil {
		return *x.Invitable
	}
	return false
}

func (x *ChannelEdit) GetAppliedTags() []string {
	if x != nil {
		return x.AppliedTags
	}
	return nil
}

type ChannelEditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Data          *ChannelEdit           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEditRequest) Reset() {
	*x = ChannelEditRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditRequest) ProtoMessage() {}

func (x *ChannelEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditRequest.ProtoReflect.Descriptor instead.
func (*ChannelEditRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{20}
}

func (x *ChannelEditRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelEditRequest) GetData() *ChannelEdit {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelEditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelEditResponse) Reset() {
	*x = ChannelEditResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelEditResponse) ProtoMessage() {}

func (x *ChannelEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelEditResponse.ProtoReflect.Descriptor instead.
func (*ChannelEditResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{21}
}

func (x *ChannelEditResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ChannelDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelDeleteRequest) Reset() {
	*x = ChannelDeleteRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteRequest) ProtoMessage() {}

func (x *ChannelDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteRequest.ProtoReflect.Descriptor instead.
func (*ChannelDeleteRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{22}
}

func (x *ChannelDeleteRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ChannelDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelDeleteResponse) Reset() {
	*x = ChannelDeleteResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteResponse) ProtoMessage() {}

func (x *ChannelDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteResponse.ProtoReflect.Descriptor instead.
func (*ChannelDeleteResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{23}
}

func (x *ChannelDeleteResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ChannelTypingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChannelTypingRequest) Reset() {
	*x = ChannelTypingRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelTypingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelTypingRequest) ProtoMessage() {}

func (x *ChannelTypingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelTypingRequest.ProtoReflect.Descriptor instead.
func (*ChannelTypingRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{24}
}

func (x *ChannelTypingRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GuildRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildRequest) Reset() {
	*x = GuildRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRequest) ProtoMessage() {}

func (x *GuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRequest.ProtoReflect.Descriptor instead.
func (*GuildRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{25}
}

func (x *GuildRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GuildResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guild         *Guild                 `protobuf:"bytes,1,opt,name=guild,proto3" json:"guild,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildResponse) Reset() {
	*x = GuildResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildResponse) ProtoMessage() {}

func (x *GuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildResponse.ProtoReflect.Descriptor instead.
func (*GuildResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{26}
}

func (x *GuildResponse) GetGuild() *Guild {
	if x != nil {
		return x.Guild
	}
	return nil
}

type GuildChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildChannelsRequest) Reset() {
	*x = GuildChannelsRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsRequest) ProtoMessage() {}

func (x *GuildChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsRequest.ProtoReflect.Descriptor instead.
func (*GuildChannelsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{27}
}

func (x *GuildChannelsRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GuildChannelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []*Channel             `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildChannelsResponse) Reset() {
	*x = GuildChannelsResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChannelsResponse) ProtoMessage() {}

func (x *GuildChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChannelsResponse.ProtoReflect.Descriptor instead.
func (*GuildChannelsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{28}
}

func (x *GuildChannelsResponse) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type GuildMembersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	After         string                 `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMembersRequest) Reset() {
	*x = GuildMembersRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersRequest) ProtoMessage() {}

func (x *GuildMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersRequest.ProtoReflect.Descriptor instead.
func (*GuildMembersRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{29}
}

func (x *GuildMembersRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GuildMembersRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *GuildMembersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GuildMembersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []*Member              `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMembersResponse) Reset() {
	*x = GuildMembersResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembersResponse) ProtoMessage() {}

func (x *GuildMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembersResponse.ProtoReflect.Descriptor instead.
func (*GuildMembersResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{30}
}

func (x *GuildMembersResponse) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type GuildMemberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMemberRequest) Reset() {
	*x = GuildMemberRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberRequest) ProtoMessage() {}

func (x *GuildMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberRequest.ProtoReflect.Descriptor instead.
func (*GuildMemberRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{31}
}

func (x *GuildMemberRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *GuildMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GuildMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Member        *Member                `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMemberResponse) Reset() {
	*x = GuildMemberResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberResponse) ProtoMessage() {}

func (x *GuildMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberResponse.ProtoReflect.Descriptor instead.
func (*GuildMemberResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{32}
}

func (x *GuildMemberResponse) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type GuildRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       string                 `protobuf:"bytes,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildRolesRequest) Reset() {
	*x = GuildRolesRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRolesRequest) ProtoMessage() {}

func (x *GuildRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRolesRequest.ProtoReflect.Descriptor instead.
func (*GuildRolesRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{33}
}

func (x *GuildRolesRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type GuildRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []*Role                `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildRolesResponse) Reset() {
	*x = GuildRolesResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRolesResponse) ProtoMessage() {}

func (x *GuildRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRolesResponse.ProtoReflect.Descriptor instead.
func (*GuildRolesResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{34}
}

func (x *GuildRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{35}
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{36}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserChannelCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   string                 `protobuf:"bytes,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelCreateRequest) Reset() {
	*x = UserChannelCreateRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelCreateRequest) ProtoMessage() {}

func (x *UserChannelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelCreateRequest.ProtoReflect.Descriptor instead.
func (*UserChannelCreateRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{37}
}

func (x *UserChannelCreateRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

type UserChannelCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelCreateResponse) Reset() {
	*x = UserChannelCreateResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelCreateResponse) ProtoMessage() {}

func (x *UserChannelCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelCreateResponse.ProtoReflect.Descriptor instead.
func (*UserChannelCreateResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{38}
}

func (x *UserChannelCreateResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type InteractionRespondRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interaction   *Interaction           `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Response      *InteractionResponse   `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractionRespondRequest) Reset() {
	*x = InteractionRespondRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionRespondRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionRespondRequest) ProtoMessage() {}

func (x *InteractionRespondRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionRespondRequest.ProtoReflect.Descriptor instead.
func (*InteractionRespondRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{39}
}

func (x *InteractionRespondRequest) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *InteractionRespondRequest) GetResponse() *InteractionResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type InteractionResponseEditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interaction   *Interaction           `protobuf:"bytes,1,opt,name=interaction,proto3" json:"interaction,omitempty"`
	WebhookEdit   *WebhookEdit           `protobuf:"bytes,2,opt,name=webhook_edit,json=webhookEdit,proto3" json:"webhook_edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractionResponseEditRequest) Reset() {
	*x = InteractionResponseEditRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionResponseEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseEditRequest) ProtoMessage() {}

func (x *InteractionResponseEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseEditRequest.ProtoReflect.Descriptor instead.
func (*InteractionResponseEditRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{40}
}

func (x *InteractionResponseEditRequest) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *InteractionResponseEditRequest) GetWebhookEdit() *WebhookEdit {
	if x != nil {
		return x.WebhookEdit
	}
	return nil
}

type InteractionResponseEditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractionResponseEditResponse) Reset() {
	*x = InteractionResponseEditResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionResponseEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResponseEditResponse) ProtoMessage() {}

func (x *InteractionResponseEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResponseEditResponse.ProtoReflect.Descriptor instead.
func (*InteractionResponseEditResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{41}
}

func (x *InteractionResponseEditResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type ApplicationCommandCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Command       *ApplicationCommand    `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandCreateRequest) Reset() {
	*x = ApplicationCommandCreateRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandCreateRequest) ProtoMessage() {}

func (x *ApplicationCommandCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandCreateRequest.ProtoReflect.Descriptor instead.
func (*ApplicationCommandCreateRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{42}
}

func (x *ApplicationCommandCreateRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ApplicationCommandCreateRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *ApplicationCommandCreateRequest) GetCommand() *ApplicationCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

type ApplicationCommandCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       *ApplicationCommand    `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandCreateResponse) Reset() {
	*x = ApplicationCommandCreateResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandCreateResponse) ProtoMessage() {}

func (x *ApplicationCommandCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandCreateResponse.ProtoReflect.Descriptor instead.
func (*ApplicationCommandCreateResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{43}
}

func (x *ApplicationCommandCreateResponse) GetCommand() *ApplicationCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

type ApplicationCommandEditRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	CmdId         string                 `protobuf:"bytes,3,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	Command       *ApplicationCommand    `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandEditRequest) Reset() {
	*x = ApplicationCommandEditRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandEditRequest) ProtoMessage() {}

func (x *ApplicationCommandEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandEditRequest.ProtoReflect.Descriptor instead.
func (*ApplicationCommandEditRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{44}
}

func (x *ApplicationCommandEditRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ApplicationCommandEditRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *ApplicationCommandEditRequest) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

func (x *ApplicationCommandEditRequest) GetCommand() *ApplicationCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

type ApplicationCommandEditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       *ApplicationCommand    `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandEditResponse) Reset() {
	*x = ApplicationCommandEditResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandEditResponse) ProtoMessage() {}

func (x *ApplicationCommandEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandEditResponse.ProtoReflect.Descriptor instead.
func (*ApplicationCommandEditResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{45}
}

func (x *ApplicationCommandEditResponse) GetCommand() *ApplicationCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

type ApplicationCommandDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	CmdId         string                 `protobuf:"bytes,3,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandDeleteRequest) Reset() {
	*x = ApplicationCommandDeleteRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandDeleteRequest) ProtoMessage() {}

func (x *ApplicationCommandDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandDeleteRequest.ProtoReflect.Descriptor instead.
func (*ApplicationCommandDeleteRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{46}
}

func (x *ApplicationCommandDeleteRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ApplicationCommandDeleteRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *ApplicationCommandDeleteRequest) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

type ApplicationCommandsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandsRequest) Reset() {
	*x = ApplicationCommandsRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandsRequest) ProtoMessage() {}

func (x *ApplicationCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandsRequest.ProtoReflect.Descriptor instead.
func (*ApplicationCommandsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{47}
}

func (x *ApplicationCommandsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ApplicationCommandsRequest) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

type ApplicationCommandsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*ApplicationCommand  `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationCommandsResponse) Reset() {
	*x = ApplicationCommandsResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationCommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCommandsResponse) ProtoMessage() {}

func (x *ApplicationCommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCommandsResponse.ProtoReflect.Descriptor instead.
func (*ApplicationCommandsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{48}
}

func (x *ApplicationCommandsResponse) GetCommands() []*ApplicationCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type MessageReactionAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	EmojiId       string                 `protobuf:"bytes,3,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReactionAddRequest) Reset() {
	*x = MessageReactionAddRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReactionAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionAddRequest) ProtoMessage() {}

func (x *MessageReactionAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionAddRequest.ProtoReflect.Descriptor instead.
func (*MessageReactionAddRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{49}
}

func (x *MessageReactionAddRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageReactionAddRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageReactionAddRequest) GetEmojiId() string {
	if x != nil {
		return x.EmojiId
	}
	return ""
}

type MessageReactionRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	EmojiId       string                 `protobuf:"bytes,3,opt,name=emoji_id,json=emojiId,proto3" json:"emoji_id,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReactionRemoveRequest) Reset() {
	*x = MessageReactionRemoveRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReactionRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionRemoveRequest) ProtoMessage() {}

func (x *MessageReactionRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionRemoveRequest.ProtoReflect.Descriptor instead.
func (*MessageReactionRemoveRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{50}
}

func (x *MessageReactionRemoveRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageReactionRemoveRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageReactionRemoveRequest) GetEmojiId() string {
	if x != nil {
		return x.EmojiId
	}
	return ""
}

func (x *MessageReactionRemoveRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MessageReactionsRemoveAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReactionsRemoveAllRequest) Reset() {
	*x = MessageReactionsRemoveAllRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReactionsRemoveAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionsRemoveAllRequest) ProtoMessage() {}

func (x *MessageReactionsRemoveAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionsRemoveAllRequest.ProtoReflect.Descriptor instead.
func (*MessageReactionsRemoveAllRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{51}
}

func (x *MessageReactionsRemoveAllRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageReactionsRemoveAllRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type ThreadStartRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChannelId       string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type            int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ArchiveDuration int32                  `protobuf:"varint,4,opt,name=archive_duration,json=archiveDuration,proto3" json:"archive_duration,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ThreadStartRequest) Reset() {
	*x = ThreadStartRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartRequest) ProtoMessage() {}

func (x *ThreadStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartRequest.ProtoReflect.Descriptor instead.
func (*ThreadStartRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{52}
}

func (x *ThreadStartRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ThreadStartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThreadStartRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ThreadStartRequest) GetArchiveDuration() int32 {
	if x != nil {
		return x.ArchiveDuration
	}
	return 0
}

type ThreadStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       *Channel               `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadStartResponse) Reset() {
	*x = ThreadStartResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadStartResponse) ProtoMessage() {}

func (x *ThreadStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadStartResponse.ProtoReflect.Descriptor instead.
func (*ThreadStartResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{53}
}

func (x *ThreadStartResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ThreadJoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadJoinRequest) Reset() {
	*x = ThreadJoinRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadJoinRequest) ProtoMessage() {}

func (x *ThreadJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadJoinRequest.ProtoReflect.Descriptor instead.
func (*ThreadJoinRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{54}
}

func (x *ThreadJoinRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type ThreadLeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadLeaveRequest) Reset() {
	*x = ThreadLeaveRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadLeaveRequest) ProtoMessage() {}

func (x *ThreadLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadLeaveRequest.ProtoReflect.Descriptor instead.
func (*ThreadLeaveRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{55}
}

func (x *ThreadLeaveRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type ThreadMemberAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadMemberAddRequest) Reset() {
	*x = ThreadMemberAddRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadMemberAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberAddRequest) ProtoMessage() {}

func (x *ThreadMemberAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberAddRequest.ProtoReflect.Descriptor instead.
func (*ThreadMemberAddRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{56}
}

func (x *ThreadMemberAddRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *ThreadMemberAddRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type ThreadMemberRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	MemberId      string                 `protobuf:"bytes,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadMemberRemoveRequest) Reset() {
	*x = ThreadMemberRemoveRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadMemberRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMemberRemoveRequest) ProtoMessage() {}

func (x *ThreadMemberRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMemberRemoveRequest.ProtoReflect.Descriptor instead.
func (*ThreadMemberRemoveRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{57}
}

func (x *ThreadMemberRemoveRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *ThreadMemberRemoveRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type VoiceRegionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceRegionsRequest) Reset() {
	*x = VoiceRegionsRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRegionsRequest) ProtoMessage() {}

func (x *VoiceRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRegionsRequest.ProtoReflect.Descriptor instead.
func (*VoiceRegionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{58}
}

type VoiceRegionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Regions       []*VoiceRegion         `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceRegionsResponse) Reset() {
	*x = VoiceRegionsResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceRegionsResponse) ProtoMessage() {}

func (x *VoiceRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceRegionsResponse.ProtoReflect.Descriptor instead.
func (*VoiceRegionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{59}
}

func (x *VoiceRegionsResponse) GetRegions() []*VoiceRegion {
	if x != nil {
		return x.Regions
	}
	return nil
}

type WebhookCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookCreateRequest) Reset() {
	*x = WebhookCreateRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookCreateRequest) ProtoMessage() {}

func (x *WebhookCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookCreateRequest.ProtoReflect.Descriptor instead.
func (*WebhookCreateRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{60}
}

func (x *WebhookCreateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *WebhookCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WebhookCreateRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type WebhookCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Webhook       *Webhook               `protobuf:"bytes,1,opt,name=webhook,proto3" json:"webhook,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookCreateResponse) Reset() {
	*x = WebhookCreateResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookCreateResponse) ProtoMessage() {}

func (x *WebhookCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookCreateResponse.ProtoReflect.Descriptor instead.
func (*WebhookCreateResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{61}
}

func (x *WebhookCreateResponse) GetWebhook() *Webhook {
	if x != nil {
		return x.Webhook
	}
	return nil
}

type WebhookExecuteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WebhookId     string                 `protobuf:"bytes,1,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Wait          bool                   `protobuf:"varint,3,opt,name=wait,proto3" json:"wait,omitempty"`
	Data          *WebhookParams         `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookExecuteRequest) Reset() {
	*x = WebhookExecuteRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookExecuteRequest) ProtoMessage() {}

func (x *WebhookExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookExecuteRequest.ProtoReflect.Descriptor instead.
func (*WebhookExecuteRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{62}
}

func (x *WebhookExecuteRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *WebhookExecuteRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WebhookExecuteRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

func (x *WebhookExecuteRequest) GetData() *WebhookParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type WebhookExecuteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebhookExecuteResponse) Reset() {
	*x = WebhookExecuteResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookExecuteResponse) ProtoMessage() {}

func (x *WebhookExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookExecuteResponse.ProtoReflect.Descriptor instead.
func (*WebhookExecuteResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{63}
}

func (x *WebhookExecuteResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type UserChannelPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelPermissionsRequest) Reset() {
	*x = UserChannelPermissionsRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelPermissionsRequest) ProtoMessage() {}

func (x *UserChannelPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelPermissionsRequest.ProtoReflect.Descriptor instead.
func (*UserChannelPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{64}
}

func (x *UserChannelPermissionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserChannelPermissionsRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type UserChannelPermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   int64                  `protobuf:"varint,1,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelPermissionsResponse) Reset() {
	*x = UserChannelPermissionsResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelPermissionsResponse) ProtoMessage() {}

func (x *UserChannelPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelPermissionsResponse.ProtoReflect.Descriptor instead.
func (*UserChannelPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{65}
}

func (x *UserChannelPermissionsResponse) GetPermissions() int64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

type GatewayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayRequest) Reset() {
	*x = GatewayRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayRequest) ProtoMessage() {}

func (x *GatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayRequest.ProtoReflect.Descriptor instead.
func (*GatewayRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{66}
}

type GatewayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayResponse) Reset() {
	*x = GatewayResponse{}
	mi := &file_discord_v1_helper_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayResponse) ProtoMessage() {}

func (x *GatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayResponse.ProtoReflect.Descriptor instead.
func (*GatewayResponse) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{67}
}

func (x *GatewayResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GatewayBotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayBotRequest) Reset() {
	*x = GatewayBotRequest{}
	mi := &file_discord_v1_helper_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayBotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBotRequest) ProtoMessage() {}

func (x *GatewayBotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discord_v1_helper_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBotRequest.ProtoReflect.Descriptor instead.
func (*GatewayBotRequest) Descriptor() ([]byte, []int) {
	return file_discord_v1_helper_proto_rawDescGZIP(), []int{68}
}

var File_discord_v1_helper_proto protoreflect.FileDescriptor

const file_discord_v1_helper_proto_rawDesc = "" +
	"\n" +
	"\x17discord-v1/helper.proto\x12\n" +
	"discord_v1\x1a\fcommon.proto\x1a\x1adiscord-v1/discordgo.proto\"T\n" +
	"\x19ChannelMessageSendRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"K\n" +
	"\x1aChannelMessageSendResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"n\n" +
	" ChannelMessageSendComplexRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.discord_v1.MessageSendR\x04data\"R\n" +
	"!ChannelMessageSendComplexResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"o\n" +
	"\x1eChannelMessageSendEmbedRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12.\n" +
	"\x05embed\x18\x02 \x01(\v2\x18.discord_v1.MessageEmbedR\x05embed\"P\n" +
	"\x1fChannelMessageSendEmbedResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"r\n" +
	"\x1fChannelMessageSendEmbedsRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x120\n" +
	"\x06embeds\x18\x02 \x03(\v2\x18.discord_v1.MessageEmbedR\x06embeds\"Q\n" +
	" ChannelMessageSendEmbedsResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"s\n" +
	"\x19ChannelMessageEditRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"K\n" +
	"\x1aChannelMessageEditResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"^\n" +
	" ChannelMessageEditComplexRequest\x12:\n" +
	"\fmessage_edit\x18\x01 \x01(\v2\x17.discord_v1.MessageEditR\vmessageEdit\"R\n" +
	"!ChannelMessageEditComplexResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"[\n" +
	"\x1bChannelMessageDeleteRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"\xa2\x01\n" +
	"\x16ChannelMessagesRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1b\n" +
	"\tbefore_id\x18\x03 \x01(\tR\bbeforeId\x12\x19\n" +
	"\bafter_id\x18\x04 \x01(\tR\aafterId\x12\x1b\n" +
	"\taround_id\x18\x05 \x01(\tR\baroundId\"J\n" +
	"\x17ChannelMessagesResponse\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.discord_v1.MessageR\bmessages\"U\n" +
	"\x15ChannelMessageRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"G\n" +
	"\x16ChannelMessageResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"/\n" +
	"\x0eChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"@\n" +
	"\x0fChannelResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.discord_v1.ChannelR\achannel\"\xed\x06\n" +
	"\vChannelEdit\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x19\n" +
	"\x05topic\x18\x02 \x01(\tH\x01R\x05topic\x88\x01\x01\x12\x17\n" +
	"\x04nsfw\x18\x03 \x01(\bH\x02R\x04nsfw\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x04 \x01(\x05H\x03R\bposition\x88\x01\x01\x12\x1d\n" +
	"\abitrate\x18\x05 \x01(\x05H\x04R\abitrate\x88\x01\x01\x12\"\n" +
	"\n" +
	"user_limit\x18\x06 \x01(\x05H\x05R\tuserLimit\x88\x01\x01\x12T\n" +
	"\x15permission_overwrites\x18\a \x03(\v2\x1f.discord_v1.PermissionOverwriteR\x14permissionOverwrites\x12 \n" +
	"\tparent_id\x18\b \x01(\tH\x06R\bparentId\x88\x01\x01\x122\n" +
	"\x13rate_limit_per_user\x18\t \x01(\x05H\aR\x10rateLimitPerUser\x88\x01\x01\x12\x19\n" +
	"\x05flags\x18\n" +
	" \x01(\x05H\bR\x05flags\x88\x01\x01\x12N\n" +
	"\"default_thread_rate_limit_per_user\x18\v \x01(\x05H\tR\x1ddefaultThreadRateLimitPerUser\x88\x01\x01\x12\x1f\n" +
	"\barchived\x18\f \x01(\bH\n" +
	"R\barchived\x88\x01\x01\x127\n" +
	"\x15auto_archive_duration\x18\r \x01(\x05H\vR\x13autoArchiveDuration\x88\x01\x01\x12\x1b\n" +
	"\x06locked\x18\x0e \x01(\bH\fR\x06locked\x88\x01\x01\x12!\n" +
	"\tinvitable\x18\x0f \x01(\bH\rR\tinvitable\x88\x01\x01\x12!\n" +
	"\fapplied_tags\x18\x10 \x03(\tR\vappliedTagsB\a\n" +
	"\x05_nameB\b\n" +
	"\x06_topicB\a\n" +
	"\x05_nsfwB\v\n" +
	"\t_positionB\n" +
	"\n" +
	"\b_bitrateB\r\n" +
	"\v_user_limitB\f\n" +
	"\n" +
	"_parent_idB\x16\n" +
	"\x14_rate_limit_per_userB\b\n" +
	"\x06_flagsB%\n" +
	"#_default_thread_rate_limit_per_userB\v\n" +
	"\t_archivedB\x18\n" +
	"\x16_auto_archive_durationB\t\n" +
	"\a_lockedB\f\n" +
	"\n" +
	"_invitable\"`\n" +
	"\x12ChannelEditRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12+\n" +
	"\x04data\x18\x02 \x01(\v2\x17.discord_v1.ChannelEditR\x04data\"D\n" +
	"\x13ChannelEditResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.discord_v1.ChannelR\achannel\"5\n" +
	"\x14ChannelDeleteRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"F\n" +
	"\x15ChannelDeleteResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.discord_v1.ChannelR\achannel\"5\n" +
	"\x14ChannelTypingRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\")\n" +
	"\fGuildRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"8\n" +
	"\rGuildResponse\x12'\n" +
	"\x05guild\x18\x01 \x01(\v2\x11.discord_v1.GuildR\x05guild\"1\n" +
	"\x14GuildChannelsRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"H\n" +
	"\x15GuildChannelsResponse\x12/\n" +
	"\bchannels\x18\x01 \x03(\v2\x13.discord_v1.ChannelR\bchannels\"\\\n" +
	"\x13GuildMembersRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\x12\x14\n" +
	"\x05after\x18\x02 \x01(\tR\x05after\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"D\n" +
	"\x14GuildMembersResponse\x12,\n" +
	"\amembers\x18\x01 \x03(\v2\x12.discord_v1.MemberR\amembers\"H\n" +
	"\x12GuildMemberRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"A\n" +
	"\x13GuildMemberResponse\x12*\n" +
	"\x06member\x18\x01 \x01(\v2\x12.discord_v1.MemberR\x06member\".\n" +
	"\x11GuildRolesRequest\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\tR\aguildId\"<\n" +
	"\x12GuildRolesResponse\x12&\n" +
	"\x05roles\x18\x01 \x03(\v2\x10.discord_v1.RoleR\x05roles\"&\n" +
	"\vUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"4\n" +
	"\fUserResponse\x12$\n" +
	"\x04user\x18\x01 \x01(\v2\x10.discord_v1.UserR\x04user\"=\n" +
	"\x18UserChannelCreateRequest\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\tR\vrecipientId\"J\n" +
	"\x19UserChannelCreateResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.discord_v1.ChannelR\achannel\"\x93\x01\n" +
	"\x19InteractionRespondRequest\x129\n" +
	"\vinteraction\x18\x01 \x01(\v2\x17.discord_v1.InteractionR\vinteraction\x12;\n" +
	"\bresponse\x18\x02 \x01(\v2\x1f.discord_v1.InteractionResponseR\bresponse\"\x97\x01\n" +
	"\x1eInteractionResponseEditRequest\x129\n" +
	"\vinteraction\x18\x01 \x01(\v2\x17.discord_v1.InteractionR\vinteraction\x12:\n" +
	"\fwebhook_edit\x18\x02 \x01(\v2\x17.discord_v1.WebhookEditR\vwebhookEdit\"P\n" +
	"\x1fInteractionResponseEditResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"\x8d\x01\n" +
	"\x1fApplicationCommandCreateRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\x128\n" +
	"\acommand\x18\x03 \x01(\v2\x1e.discord_v1.ApplicationCommandR\acommand\"\\\n" +
	" ApplicationCommandCreateResponse\x128\n" +
	"\acommand\x18\x01 \x01(\v2\x1e.discord_v1.ApplicationCommandR\acommand\"\xa2\x01\n" +
	"\x1dApplicationCommandEditRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\x12\x15\n" +
	"\x06cmd_id\x18\x03 \x01(\tR\x05cmdId\x128\n" +
	"\acommand\x18\x04 \x01(\v2\x1e.discord_v1.ApplicationCommandR\acommand\"Z\n" +
	"\x1eApplicationCommandEditResponse\x128\n" +
	"\acommand\x18\x01 \x01(\v2\x1e.discord_v1.ApplicationCommandR\acommand\"j\n" +
	"\x1fApplicationCommandDeleteRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\x12\x15\n" +
	"\x06cmd_id\x18\x03 \x01(\tR\x05cmdId\"N\n" +
	"\x1aApplicationCommandsRequest\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x19\n" +
	"\bguild_id\x18\x02 \x01(\tR\aguildId\"Y\n" +
	"\x1bApplicationCommandsResponse\x12:\n" +
	"\bcommands\x18\x01 \x03(\v2\x1e.discord_v1.ApplicationCommandR\bcommands\"t\n" +
	"\x19MessageReactionAddRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x19\n" +
	"\bemoji_id\x18\x03 \x01(\tR\aemojiId\"\x90\x01\n" +
	"\x1cMessageReactionRemoveRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x19\n" +
	"\bemoji_id\x18\x03 \x01(\tR\aemojiId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\"`\n" +
	" MessageReactionsRemoveAllRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"\x86\x01\n" +
	"\x12ThreadStartRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12)\n" +
	"\x10archive_duration\x18\x04 \x01(\x05R\x0farchiveDuration\"D\n" +
	"\x13ThreadStartResponse\x12-\n" +
	"\achannel\x18\x01 \x01(\v2\x13.discord_v1.ChannelR\achannel\"0\n" +
	"\x11ThreadJoinRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\"1\n" +
	"\x12ThreadLeaveRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\"R\n" +
	"\x16ThreadMemberAddRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\"U\n" +
	"\x19ThreadMemberRemoveRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\tR\bmemberId\"\x15\n" +
	"\x13VoiceRegionsRequest\"I\n" +
	"\x14VoiceRegionsResponse\x121\n" +
	"\aregions\x18\x01 \x03(\v2\x17.discord_v1.VoiceRegionR\aregions\"a\n" +
	"\x14WebhookCreateRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06avatar\x18\x03 \x01(\tR\x06avatar\"F\n" +
	"\x15WebhookCreateResponse\x12-\n" +
	"\awebhook\x18\x01 \x01(\v2\x13.discord_v1.WebhookR\awebhook\"\x8f\x01\n" +
	"\x15WebhookExecuteRequest\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x01 \x01(\tR\twebhookId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x12\n" +
	"\x04wait\x18\x03 \x01(\bR\x04wait\x12-\n" +
	"\x04data\x18\x04 \x01(\v2\x19.discord_v1.WebhookParamsR\x04data\"G\n" +
	"\x16WebhookExecuteResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.discord_v1.MessageR\amessage\"W\n" +
	"\x1dUserChannelPermissionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\"B\n" +
	"\x1eUserChannelPermissionsResponse\x12 \n" +
	"\vpermissions\x18\x01 \x01(\x03R\vpermissions\"\x10\n" +
	"\x0eGatewayRequest\"#\n" +
	"\x0fGatewayResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\x13\n" +
	"\x11GatewayBotRequest2\xc3\x1b\n" +
	"\x06Helper\x12c\n" +
	"\x12ChannelMessageSend\x12%.discord_v1.ChannelMessageSendRequest\x1a&.discord_v1.ChannelMessageSendResponse\x12x\n" +
	"\x19ChannelMessageSendComplex\x12,.discord_v1.ChannelMessageSendComplexRequest\x1a-.discord_v1.ChannelMessageSendComplexResponse\x12r\n" +
	"\x17ChannelMessageSendEmbed\x12*.discord_v1.ChannelMessageSendEmbedRequest\x1a+.discord_v1.ChannelMessageSendEmbedResponse\x12u\n" +
	"\x18ChannelMessageSendEmbeds\x12+.discord_v1.ChannelMessageSendEmbedsRequest\x1a,.discord_v1.ChannelMessageSendEmbedsResponse\x12c\n" +
	"\x12ChannelMessageEdit\x12%.discord_v1.ChannelMessageEditRequest\x1a&.discord_v1.ChannelMessageEditResponse\x12x\n" +
	"\x19ChannelMessageEditComplex\x12,.discord_v1.ChannelMessageEditComplexRequest\x1a-.discord_v1.ChannelMessageEditComplexResponse\x12N\n" +
	"\x14ChannelMessageDelete\x12'.discord_v1.ChannelMessageDeleteRequest\x1a\r.common.Empty\x12Z\n" +
	"\x0fChannelMessages\x12\".discord_v1.ChannelMessagesRequest\x1a#.discord_v1.ChannelMessagesResponse\x12W\n" +
	"\x0eChannelMessage\x12!.discord_v1.ChannelMessageRequest\x1a\".discord_v1.ChannelMessageResponse\x12B\n" +
	"\aChannel\x12\x1a.discord_v1.ChannelRequest\x1a\x1b.discord_v1.ChannelResponse\x12N\n" +
	"\vChannelEdit\x12\x1e.discord_v1.ChannelEditRequest\x1a\x1f.discord_v1.ChannelEditResponse\x12T\n" +
	"\rChannelDelete\x12 .discord_v1.ChannelDeleteRequest\x1a!.discord_v1.ChannelDeleteResponse\x12@\n" +
	"\rChannelTyping\x12 .discord_v1.ChannelTypingRequest\x1a\r.common.Empty\x12<\n" +
	"\x05Guild\x12\x18.discord_v1.GuildRequest\x1a\x19.discord_v1.GuildResponse\x12T\n" +
	"\rGuildChannels\x12 .discord_v1.GuildChannelsRequest\x1a!.discord_v1.GuildChannelsResponse\x12Q\n" +
	"\fGuildMembers\x12\x1f.discord_v1.GuildMembersRequest\x1a .discord_v1.GuildMembersResponse\x12N\n" +
	"\vGuildMember\x12\x1e.discord_v1.GuildMemberRequest\x1a\x1f.discord_v1.GuildMemberResponse\x12K\n" +
	"\n" +
	"GuildRoles\x12\x1d.discord_v1.GuildRolesRequest\x1a\x1e.discord_v1.GuildRolesResponse\x129\n" +
	"\x04User\x12\x17.discord_v1.UserRequest\x1a\x18.discord_v1.UserResponse\x12`\n" +
	"\x11UserChannelCreate\x12$.discord_v1.UserChannelCreateRequest\x1a%.discord_v1.UserChannelCreateResponse\x12J\n" +
	"\x12InteractionRespond\x12%.discord_v1.InteractionRespondRequest\x1a\r.common.Empty\x12r\n" +
	"\x17InteractionResponseEdit\x12*.discord_v1.InteractionResponseEditRequest\x1a+.discord_v1.InteractionResponseEditResponse\x12u\n" +
	"\x18ApplicationCommandCreate\x12+.discord_v1.ApplicationCommandCreateRequest\x1a,.discord_v1.ApplicationCommandCreateResponse\x12o\n" +
	"\x16ApplicationCommandEdit\x12).discord_v1.ApplicationCommandEditRequest\x1a*.discord_v1.ApplicationCommandEditResponse\x12V\n" +
	"\x18ApplicationCommandDelete\x12+.discord_v1.ApplicationCommandDeleteRequest\x1a\r.common.Empty\x12f\n" +
	"\x13ApplicationCommands\x12&.discord_v1.ApplicationCommandsRequest\x1a'.discord_v1.ApplicationCommandsResponse\x12J\n" +
	"\x12MessageReactionAdd\x12%.discord_v1.MessageReactionAddRequest\x1a\r.common.Empty\x12P\n" +
	"\x15MessageReactionRemove\x12(.discord_v1.MessageReactionRemoveRequest\x1a\r.common.Empty\x12X\n" +
	"\x19MessageReactionsRemoveAll\x12,.discord_v1.MessageReactionsRemoveAllRequest\x1a\r.common.Empty\x12N\n" +
	"\vThreadStart\x12\x1e.discord_v1.ThreadStartRequest\x1a\x1f.discord_v1.ThreadStartResponse\x12:\n" +
	"\n" +
	"ThreadJoin\x12\x1d.discord_v1.ThreadJoinRequest\x1a\r.common.Empty\x12<\n" +
	"\vThreadLeave\x12\x1e.discord_v1.ThreadLeaveRequest\x1a\r.common.Empty\x12D\n" +
	"\x0fThreadMemberAdd\x12\".discord_v1.ThreadMemberAddRequest\x1a\r.common.Empty\x12J\n" +
	"\x12ThreadMemberRemove\x12%.discord_v1.ThreadMemberRemoveRequest\x1a\r.common.Empty\x12Q\n" +
	"\fVoiceRegions\x12\x1f.discord_v1.VoiceRegionsRequest\x1a .discord_v1.VoiceRegionsResponse\x12T\n" +
	"\rWebhookCreate\x12 .discord_v1.WebhookCreateRequest\x1a!.discord_v1.WebhookCreateResponse\x12W\n" +
	"\x0eWebhookExecute\x12!.discord_v1.WebhookExecuteRequest\x1a\".discord_v1.WebhookExecuteResponse\x12o\n" +
	"\x16UserChannelPermissions\x12).discord_v1.UserChannelPermissionsRequest\x1a*.discord_v1.UserChannelPermissionsResponse\x12B\n" +
	"\aGateway\x12\x1a.discord_v1.GatewayRequest\x1a\x1b.discord_v1.GatewayResponse\x12K\n" +
	"\n" +
	"GatewayBot\x12\x1d.discord_v1.GatewayBotRequest\x1a\x1e.discord_v1.GatewayBotResponseB<Z:github.com/thirdscam/chatanium-flexmodule/proto/discord-v1b\x06proto3"

var (
	file_discord_v1_helper_proto_rawDescOnce sync.Once
	file_discord_v1_helper_proto_rawDescData []byte
)

func file_discord_v1_helper_proto_rawDescGZIP() []byte {
	file_discord_v1_helper_proto_rawDescOnce.Do(func() {
		file_discord_v1_helper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_discord_v1_helper_proto_rawDesc), len(file_discord_v1_helper_proto_rawDesc)))
	})
	return file_discord_v1_helper_proto_rawDescData
}

var file_discord_v1_helper_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_discord_v1_helper_proto_goTypes = []any{
	(*ChannelMessageSendRequest)(nil),         // 0: discord_v1.ChannelMessageSendRequest
	(*ChannelMessageSendResponse)(nil),        // 1: discord_v1.ChannelMessageSendResponse
	(*ChannelMessageSendComplexRequest)(nil),  // 2: discord_v1.ChannelMessageSendComplexRequest
	(*ChannelMessageSendComplexResponse)(nil), // 3: discord_v1.ChannelMessageSendComplexResponse
	(*ChannelMessageSendEmbedRequest)(nil),    // 4: discord_v1.ChannelMessageSendEmbedRequest
	(*ChannelMessageSendEmbedResponse)(nil),   // 5: discord_v1.ChannelMessageSendEmbedResponse
	(*ChannelMessageSendEmbedsRequest)(nil),   // 6: discord_v1.ChannelMessageSendEmbedsRequest
	(*ChannelMessageSendEmbedsResponse)(nil),  // 7: discord_v1.ChannelMessageSendEmbedsResponse
	(*ChannelMessageEditRequest)(nil),         // 8: discord_v1.ChannelMessageEditRequest
	(*ChannelMessageEditResponse)(nil),        // 9: discord_v1.ChannelMessageEditResponse
	(*ChannelMessageEditComplexRequest)(nil),  // 10: discord_v1.ChannelMessageEditComplexRequest
	(*ChannelMessageEditComplexResponse)(nil), // 11: discord_v1.ChannelMessageEditComplexResponse
	(*ChannelMessageDeleteRequest)(nil),       // 12: discord_v1.ChannelMessageDeleteRequest
	(*ChannelMessagesRequest)(nil),            // 13: discord_v1.ChannelMessagesRequest
	(*ChannelMessagesResponse)(nil),           // 14: discord_v1.ChannelMessagesResponse
	(*ChannelMessageRequest)(nil),             // 15: discord_v1.ChannelMessageRequest
	(*ChannelMessageResponse)(nil),            // 16: discord_v1.ChannelMessageResponse
	(*ChannelRequest)(nil),                    // 17: discord_v1.ChannelRequest
	(*ChannelResponse)(nil),                   // 18: discord_v1.ChannelResponse
	(*ChannelEdit)(nil),                       // 19: discord_v1.ChannelEdit
	(*ChannelEditRequest)(nil),                // 20: discord_v1.ChannelEditRequest
	(*ChannelEditResponse)(nil),               // 21: discord_v1.ChannelEditResponse
	(*ChannelDeleteRequest)(nil),              // 22: discord_v1.ChannelDeleteRequest
	(*ChannelDeleteResponse)(nil),             // 23: discord_v1.ChannelDeleteResponse
	(*ChannelTypingRequest)(nil),              // 24: discord_v1.ChannelTypingRequest
	(*GuildRequest)(nil),                      // 25: discord_v1.GuildRequest
	(*GuildResponse)(nil),                     // 26: discord_v1.GuildResponse
	(*GuildChannelsRequest)(nil),              // 27: discord_v1.GuildChannelsRequest
	(*GuildChannelsResponse)(nil),             // 28: discord_v1.GuildChannelsResponse
	(*GuildMembersRequest)(nil),               // 29: discord_v1.GuildMembersRequest
	(*GuildMembersResponse)(nil),              // 30: discord_v1.GuildMembersResponse
	(*GuildMemberRequest)(nil),                // 31: discord_v1.GuildMemberRequest
	(*GuildMemberResponse)(nil),               // 32: discord_v1.GuildMemberResponse
	(*GuildRolesRequest)(nil),                 // 33: discord_v1.GuildRolesRequest
	(*GuildRolesResponse)(nil),                // 34: discord_v1.GuildRolesResponse
	(*UserRequest)(nil),                       // 35: discord_v1.UserRequest
	(*UserResponse)(nil),                      // 36: discord_v1.UserResponse
	(*UserChannelCreateRequest)(nil),          // 37: discord_v1.UserChannelCreateRequest
	(*UserChannelCreateResponse)(nil),         // 38: discord_v1.UserChannelCreateResponse
	(*InteractionRespondRequest)(nil),         // 39: discord_v1.InteractionRespondRequest
	(*InteractionResponseEditRequest)(nil),    // 40: discord_v1.InteractionResponseEditRequest
	(*InteractionResponseEditResponse)(nil),   // 41: discord_v1.InteractionResponseEditResponse
	(*ApplicationCommandCreateRequest)(nil),   // 42: discord_v1.ApplicationCommandCreateRequest
	(*ApplicationCommandCreateResponse)(nil),  // 43: discord_v1.ApplicationCommandCreateResponse
	(*ApplicationCommandEditRequest)(nil),     // 44: discord_v1.ApplicationCommandEditRequest
	(*ApplicationCommandEditResponse)(nil),    // 45: discord_v1.ApplicationCommandEditResponse
	(*ApplicationCommandDeleteRequest)(nil),   // 46: discord_v1.ApplicationCommandDeleteRequest
	(*ApplicationCommandsRequest)(nil),        // 47: discord_v1.ApplicationCommandsRequest
	(*ApplicationCommandsResponse)(nil),       // 48: discord_v1.ApplicationCommandsResponse
	(*MessageReactionAddRequest)(nil),         // 49: discord_v1.MessageReactionAddRequest
	(*MessageReactionRemoveRequest)(nil),      // 50: discord_v1.MessageReactionRemoveRequest
	(*MessageReactionsRemoveAllRequest)(nil),  // 51: discord_v1.MessageReactionsRemoveAllRequest
	(*ThreadStartRequest)(nil),                // 52: discord_v1.ThreadStartRequest
	(*ThreadStartResponse)(nil),               // 53: discord_v1.ThreadStartResponse
	(*ThreadJoinRequest)(nil),                 // 54: discord_v1.ThreadJoinRequest
	(*ThreadLeaveRequest)(nil),                // 55: discord_v1.ThreadLeaveRequest
	(*ThreadMemberAddRequest)(nil),            // 56: discord_v1.ThreadMemberAddRequest
	(*ThreadMemberRemoveRequest)(nil),         // 57: discord_v1.ThreadMemberRemoveRequest
	(*VoiceRegionsRequest)(nil),               // 58: discord_v1.VoiceRegionsRequest
	(*VoiceRegionsResponse)(nil),              // 59: discord_v1.VoiceRegionsResponse
	(*WebhookCreateRequest)(nil),              // 60: discord_v1.WebhookCreateRequest
	(*WebhookCreateResponse)(nil),             // 61: discord_v1.WebhookCreateResponse
	(*WebhookExecuteRequest)(nil),             // 62: discord_v1.WebhookExecuteRequest
	(*WebhookExecuteResponse)(nil),            // 63: discord_v1.WebhookExecuteResponse
	(*UserChannelPermissionsRequest)(nil),     // 64: discord_v1.UserChannelPermissionsRequest
	(*UserChannelPermissionsResponse)(nil),    // 65: discord_v1.UserChannelPermissionsResponse
	(*GatewayRequest)(nil),                    // 66: discord_v1.GatewayRequest
	(*GatewayResponse)(nil),                   // 67: discord_v1.GatewayResponse
	(*GatewayBotRequest)(nil),                 // 68: discord_v1.GatewayBotRequest
	(*Message)(nil),                           // 69: discord_v1.Message
	(*MessageSend)(nil),                       // 70: discord_v1.MessageSend
	(*MessageEmbed)(nil),                      // 71: discord_v1.MessageEmbed
	(*MessageEdit)(nil),                       // 72: discord_v1.MessageEdit
	(*Channel)(nil),                           // 73: discord_v1.Channel
	(*PermissionOverwrite)(nil),               // 74: discord_v1.PermissionOverwrite
	(*Guild)(nil),                             // 75: discord_v1.Guild
	(*Member)(nil),                            // 76: discord_v1.Member
	(*Role)(nil),                              // 77: discord_v1.Role
	(*User)(nil),                              // 78: discord_v1.User
	(*Interaction)(nil),                       // 79: discord_v1.Interaction
	(*InteractionResponse)(nil),               // 80: discord_v1.InteractionResponse
	(*WebhookEdit)(nil),                       // 81: discord_v1.WebhookEdit
	(*ApplicationCommand)(nil),                // 82: discord_v1.ApplicationCommand
	(*VoiceRegion)(nil),                       // 83: discord_v1.VoiceRegion
	(*Webhook)(nil),                           // 84: discord_v1.Webhook
	(*WebhookParams)(nil),                     // 85: discord_v1.WebhookParams
	(*proto.Empty)(nil),                       // 86: common.Empty
	(*GatewayBotResponse)(nil),                // 87: discord_v1.GatewayBotResponse
}
var file_discord_v1_helper_proto_depIdxs = []int32{
	69, // 0: discord_v1.ChannelMessageSendResponse.message:type_name -> discord_v1.Message
	70, // 1: discord_v1.ChannelMessageSendComplexRequest.data:type_name -> discord_v1.MessageSend
	69, // 2: discord_v1.ChannelMessageSendComplexResponse.message:type_name -> discord_v1.Message
	71, // 3: discord_v1.ChannelMessageSendEmbedRequest.embed:type_name -> discord_v1.MessageEmbed
	69, // 4: discord_v1.ChannelMessageSendEmbedResponse.message:type_name -> discord_v1.Message
	71, // 5: discord_v1.ChannelMessageSendEmbedsRequest.embeds:type_name -> discord_v1.MessageEmbed
	69, // 6: discord_v1.ChannelMessageSendEmbedsResponse.message:type_name -> discord_v1.Message
	69, // 7: discord_v1.ChannelMessageEditResponse.message:type_name -> discord_v1.Message
	72, // 8: discord_v1.ChannelMessageEditComplexRequest.message_edit:type_name -> discord_v1.MessageEdit
	69, // 9: discord_v1.ChannelMessageEditComplexResponse.message:type_name -> discord_v1.Message
	69, // 10: discord_v1.ChannelMessagesResponse.messages:type_name -> discord_v1.Message
	69, // 11: discord_v1.ChannelMessageResponse.message:type_name -> discord_v1.Message
	73, // 12: discord_v1.ChannelResponse.channel:type_name -> discord_v1.Channel
	74, // 13: discord_v1.ChannelEdit.permission_overwrites:type_name -> discord_v1.PermissionOverwrite
	19, // 14: discord_v1.ChannelEditRequest.data:type_name -> discord_v1.ChannelEdit
	73, // 15: discord_v1.ChannelEditResponse.channel:type_name -> discord_v1.Channel
	73, // 16: discord_v1.ChannelDeleteResponse.channel:type_name -> discord_v1.Channel
	75, // 17: discord_v1.GuildResponse.guild:type_name -> discord_v1.Guild
	73, // 18: discord_v1.GuildChannelsResponse.channels:type_name -> discord_v1.Channel
	76, // 19: discord_v1.GuildMembersResponse.members:type_name -> discord_v1.Member
	76, // 20: discord_v1.GuildMemberResponse.member:type_name -> discord_v1.Member
	77, // 21: discord_v1.GuildRolesResponse.roles:type_name -> discord_v1.Role
	78, // 22: discord_v1.UserResponse.user:type_name -> discord_v1.User
	73, // 23: discord_v1.UserChannelCreateResponse.channel:type_name -> discord_v1.Channel
	79, // 24: discord_v1.InteractionRespondRequest.interaction:type_name -> discord_v1.Interaction
	80, // 25: discord_v1.InteractionRespondRequest.response:type_name -> discord_v1.InteractionResponse
	79, // 26: discord_v1.InteractionResponseEditRequest.interaction:type_name -> discord_v1.Interaction
	81, // 27: discord_v1.InteractionResponseEditRequest.webhook_edit:type_name -> discord_v1.WebhookEdit
	69, // 28: discord_v1.InteractionResponseEditResponse.message:type_name -> discord_v1.Message
	82, // 29: discord_v1.ApplicationCommandCreateRequest.command:type_name -> discord_v1.ApplicationCommand
	82, // 30: discord_v1.ApplicationCommandCreateResponse.command:type_name -> discord_v1.ApplicationCommand
	82, // 31: discord_v1.ApplicationCommandEditRequest.command:type_name -> discord_v1.ApplicationCommand
	82, // 32: discord_v1.ApplicationCommandEditResponse.command:type_name -> discord_v1.ApplicationCommand
	82, // 33: discord_v1.ApplicationCommandsResponse.commands:type_name -> discord_v1.ApplicationCommand
	73, // 34: discord_v1.ThreadStartResponse.channel:type_name -> discord_v1.Channel
	83, // 35: discord_v1.VoiceRegionsResponse.regions:type_name -> discord_v1.VoiceRegion
	84, // 36: discord_v1.WebhookCreateResponse.webhook:type_name -> discord_v1.Webhook
	85, // 37: discord_v1.WebhookExecuteRequest.data:type_name -> discord_v1.WebhookParams
	69, // 38: discord_v1.WebhookExecuteResponse.message:type_name -> discord_v1.Message
	0,  // 39: discord_v1.Helper.ChannelMessageSend:input_type -> discord_v1.ChannelMessageSendRequest
	2,  // 40: discord_v1.Helper.ChannelMessageSendComplex:input_type -> discord_v1.ChannelMessageSendComplexRequest
	4,  // 41: discord_v1.Helper.ChannelMessageSendEmbed:input_type -> discord_v1.ChannelMessageSendEmbedRequest
	6,  // 42: discord_v1.Helper.ChannelMessageSendEmbeds:input_type -> discord_v1.ChannelMessageSendEmbedsRequest
	8,  // 43: discord_v1.Helper.ChannelMessageEdit:input_type -> discord_v1.ChannelMessageEditRequest
	10, // 44: discord_v1.Helper.ChannelMessageEditComplex:input_type -> discord_v1.ChannelMessageEditComplexRequest
	12, // 45: discord_v1.Helper.ChannelMessageDelete:input_type -> discord_v1.ChannelMessageDeleteRequest
	13, // 46: discord_v1.Helper.ChannelMessages:input_type -> discord_v1.ChannelMessagesRequest
	15, // 47: discord_v1.Helper.ChannelMessage:input_type -> discord_v1.ChannelMessageRequest
	17, // 48: discord_v1.Helper.Channel:input_type -> discord_v1.ChannelRequest
	20, // 49: discord_v1.Helper.ChannelEdit:input_type -> discord_v1.ChannelEditRequest
	22, // 50: discord_v1.Helper.ChannelDelete:input_type -> discord_v1.ChannelDeleteRequest
	24, // 51: discord_v1.Helper.ChannelTyping:input_type -> discord_v1.ChannelTypingRequest
	25, // 52: discord_v1.Helper.Guild:input_type -> discord_v1.GuildRequest
	27, // 53: discord_v1.Helper.GuildChannels:input_type -> discord_v1.GuildChannelsRequest
	29, // 54: discord_v1.Helper.GuildMembers:input_type -> discord_v1.GuildMembersRequest
	31, // 55: discord_v1.Helper.GuildMember:input_type -> discord_v1.GuildMemberRequest
	33, // 56: discord_v1.Helper.GuildRoles:input_type -> discord_v1.GuildRolesRequest
	35, // 57: discord_v1.Helper.User:input_type -> discord_v1.UserRequest
	37, // 58: discord_v1.Helper.UserChannelCreate:input_type -> discord_v1.UserChannelCreateRequest
	39, // 59: discord_v1.Helper.InteractionRespond:input_type -> discord_v1.InteractionRespondRequest
	40, // 60: discord_v1.Helper.InteractionResponseEdit:input_type -> discord_v1.InteractionResponseEditRequest
	42, // 61: discord_v1.Helper.ApplicationCommandCreate:input_type -> discord_v1.ApplicationCommandCreateRequest
	44, // 62: discord_v1.Helper.ApplicationCommandEdit:input_type -> discord_v1.ApplicationCommandEditRequest
	46, // 63: discord_v1.Helper.ApplicationCommandDelete:input_type -> discord_v1.ApplicationCommandDeleteRequest
	47, // 64: discord_v1.Helper.ApplicationCommands:input_type -> discord_v1.ApplicationCommandsRequest
	49, // 65: discord_v1.Helper.MessageReactionAdd:input_type -> discord_v1.MessageReactionAddRequest
	50, // 66: discord_v1.Helper.MessageReactionRemove:input_type -> discord_v1.MessageReactionRemoveRequest
	51, // 67: discord_v1.Helper.MessageReactionsRemoveAll:input_type -> discord_v1.MessageReactionsRemoveAllRequest
	52, // 68: discord_v1.Helper.ThreadStart:input_type -> discord_v1.ThreadStartRequest
	54, // 69: discord_v1.Helper.ThreadJoin:input_type -> discord_v1.ThreadJoinRequest
	55, // 70: discord_v1.Helper.ThreadLeave:input_type -> discord_v1.ThreadLeaveRequest
	56, // 71: discord_v1.Helper.ThreadMemberAdd:input_type -> discord_v1.ThreadMemberAddRequest
	57, // 72: discord_v1.Helper.ThreadMemberRemove:input_type -> discord_v1.ThreadMemberRemoveRequest
	58, // 73: discord_v1.Helper.VoiceRegions:input_type -> discord_v1.VoiceRegionsRequest
	60, // 74: discord_v1.Helper.WebhookCreate:input_type -> discord_v1.WebhookCreateRequest
	62, // 75: discord_v1.Helper.WebhookExecute:input_type -> discord_v1.WebhookExecuteRequest
	64, // 76: discord_v1.Helper.UserChannelPermissions:input_type -> discord_v1.UserChannelPermissionsRequest
	66, // 77: discord_v1.Helper.Gateway:input_type -> discord_v1.GatewayRequest
	68, // 78: discord_v1.Helper.GatewayBot:input_type -> discord_v1.GatewayBotRequest
	1,  // 79: discord_v1.Helper.ChannelMessageSend:output_type -> discord_v1.ChannelMessageSendResponse
	3,  // 80: discord_v1.Helper.ChannelMessageSendComplex:output_type -> discord_v1.ChannelMessageSendComplexResponse
	5,  // 81: discord_v1.Helper.ChannelMessageSendEmbed:output_type -> discord_v1.ChannelMessageSendEmbedResponse
	7,  // 82: discord_v1.Helper.ChannelMessageSendEmbeds:output_type -> discord_v1.ChannelMessageSendEmbedsResponse
	9,  // 83: discord_v1.Helper.ChannelMessageEdit:output_type -> discord_v1.ChannelMessageEditResponse
	11, // 84: discord_v1.Helper.ChannelMessageEditComplex:output_type -> discord_v1.ChannelMessageEditComplexResponse
	86, // 85: discord_v1.Helper.ChannelMessageDelete:output_type -> common.Empty
	14, // 86: discord_v1.Helper.ChannelMessages:output_type -> discord_v1.ChannelMessagesResponse
	16, // 87: discord_v1.Helper.ChannelMessage:output_type -> discord_v1.ChannelMessageResponse
	18, // 88: discord_v1.Helper.Channel:output_type -> discord_v1.ChannelResponse
	21, // 89: discord_v1.Helper.ChannelEdit:output_type -> discord_v1.ChannelEditResponse
	23, // 90: discord_v1.Helper.ChannelDelete:output_type -> discord_v1.ChannelDeleteResponse
	86, // 91: discord_v1.Helper.ChannelTyping:output_type -> common.Empty
	26, // 92: discord_v1.Helper.Guild:output_type -> discord_v1.GuildResponse
	28, // 93: discord_v1.Helper.GuildChannels:output_type -> discord_v1.GuildChannelsResponse
	30, // 94: discord_v1.Helper.GuildMembers:output_type -> discord_v1.GuildMembersResponse
	32, // 95: discord_v1.Helper.GuildMember:output_type -> discord_v1.GuildMemberResponse
	34, // 96: discord_v1.Helper.GuildRoles:output_type -> discord_v1.GuildRolesResponse
	36, // 97: discord_v1.Helper.User:output_type -> discord_v1.UserResponse
	38, // 98: discord_v1.Helper.UserChannelCreate:output_type -> discord_v1.UserChannelCreateResponse
	86, // 99: discord_v1.Helper.InteractionRespond:output_type -> common.Empty
	41, // 100: discord_v1.Helper.InteractionResponseEdit:output_type -> discord_v1.InteractionResponseEditResponse
	43, // 101: discord_v1.Helper.ApplicationCommandCreate:output_type -> discord_v1.ApplicationCommandCreateResponse
	45, // 102: discord_v1.Helper.ApplicationCommandEdit:output_type -> discord_v1.ApplicationCommandEditResponse
	86, // 103: discord_v1.Helper.ApplicationCommandDelete:output_type -> common.Empty
	48, // 104: discord_v1.Helper.ApplicationCommands:output_type -> discord_v1.ApplicationCommandsResponse
	86, // 105: discord_v1.Helper.MessageReactionAdd:output_type -> common.Empty
	86, // 106: discord_v1.Helper.MessageReactionRemove:output_type -> common.Empty
	86, // 107: discord_v1.Helper.MessageReactionsRemoveAll:output_type -> common.Empty
	53, // 108: discord_v1.Helper.ThreadStart:output_type -> discord_v1.ThreadStartResponse
	86, // 109: discord_v1.Helper.ThreadJoin:output_type -> common.Empty
	86, // 110: discord_v1.Helper.ThreadLeave:output_type -> common.Empty
	86, // 111: discord_v1.Helper.ThreadMemberAdd:output_type -> common.Empty
	86, // 112: discord_v1.Helper.ThreadMemberRemove:output_type -> common.Empty
	59, // 113: discord_v1.Helper.VoiceRegions:output_type -> discord_v1.VoiceRegionsResponse
	61, // 114: discord_v1.Helper.WebhookCreate:output_type -> discord_v1.WebhookCreateResponse
	63, // 115: discord_v1.Helper.WebhookExecute:output_type -> discord_v1.WebhookExecuteResponse
	65, // 116: discord_v1.Helper.UserChannelPermissions:output_type -> discord_v1.UserChannelPermissionsResponse
	67, // 117: discord_v1.Helper.Gateway:output_type -> discord_v1.GatewayResponse
	87, // 118: discord_v1.Helper.GatewayBot:output_type -> discord_v1.GatewayBotResponse
	79, // [79:119] is the sub-list for method output_type
	39, // [39:79] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_discord_v1_helper_proto_init() }
func file_discord_v1_helper_proto_init() {
	if File_discord_v1_helper_proto != nil {
		return
	}
	file_discord_v1_discordgo_proto_init()
	file_discord_v1_helper_proto_msgTypes[19].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_discord_v1_helper_proto_rawDesc), len(file_discord_v1_helper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_discord_v1_helper_proto_goTypes,
		DependencyIndexes: file_discord_v1_helper_proto_depIdxs,
		MessageInfos:      file_discord_v1_helper_proto_msgTypes,
	}.Build()
	File_discord_v1_helper_proto = out.File
	file_discord_v1_helper_proto_goTypes = nil
	file_discord_v1_helper_proto_depIdxs = nil
}
